@using KurrentDB.SecondaryIndexing.Stats
@inject StatsService Stats

@if (_loading) {
	<MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large"/>
} else if (_details.Count > 0) {
	<MudAlert Severity="Severity.Warning">
		Database has explicit transactions. Reads from secondary indexes might be out of order.
	</MudAlert>
	<MudDataGrid Items="@_details">
		<Columns>
			<PropertyColumn Property="x => x.Category" Title="Category"/>
			<PropertyColumn Property="x => x.TransactionCount" Title="Number of transactions"/>
			<PropertyColumn Property="x => x.LastTransactionDate" Title="Last transaction date"/>
		</Columns>
	</MudDataGrid>
} else {
	<MudAlert Severity="Severity.Success">No explicit transactions found</MudAlert>
}

@code {
	private bool _loading = true;
	private List<StatsSql.GetExplicitTransactions.Result> _details = [];

	protected override void OnAfterRender(bool firstRender) {
		base.OnAfterRender(firstRender);
		if (!firstRender) return;
		Task.Run(() => InvokeAsync(LoadDetails));
	}

	void LoadDetails() {
		_details = Stats.GetExplicitTransactions();
		_loading = false;
		StateHasChanged();
	}
}
