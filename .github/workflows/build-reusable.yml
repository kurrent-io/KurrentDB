name: Build - Reusable

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      cs_symbols:
        required: false
        type: string
        default: ""

jobs:
  build:
    env:
      DB_IMAGE: kurrentdb-test-container
    strategy:
      fail-fast: false
      matrix:
        configuration: [release]
        # todo: a way to not accidentally miss any modules
        module:
        - "KurrentDB"
        - "KurrentDB.AutoScavenge.Tests"
        - "KurrentDB.BufferManagement.Tests"
    runs-on: ${{ inputs.os }}
    name: ${{ inputs.os }}-${{ matrix.module }}
    steps:
    -  
      name: Install Azure Emulator
      if: ${{ contains(inputs.cs_symbols, 'RUN_AZ_TESTS') }}
      run: |
        npm install -g azurite
        azurite --location /tmp/azurite &
        curl -I http://127.0.0.1:10000/ --retry 5 --retry-delay 1 --retry-connrefused
    -  
      name: Free Disk Space (Ubuntu)
      if: ${{ !startsWith(inputs.os, 'windows') }}
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        tool-cache: false
        dotnet: false
        docker-images: false
    -  
      name: Checkout
      uses: actions/checkout@v4
    -  
      name: Set up Docker Buildx
      if: ${{ !startsWith(inputs.os, 'windows') }}
      uses: docker/setup-buildx-action@v2
    -  
      name: Install net10.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 10.0.x
    # //qq check this
    -
      name: Use nuget cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          nuget-${{ runner.os }}-
    -  
      name: Clear Nuget Config
      shell: powershell
      if: ${{ startsWith(inputs.os, 'windows') }}
      run: |
        if (-not(Test-Path $env:APPDATA\NuGet\NuGet.Config -PathType Leaf)) {
          return;
        }
        Remove-Item $env:APPDATA\NuGet\NuGet.Config
    -  
      name: Compile
      shell: bash
      run: >
        dotnet build
        --configuration ${{ matrix.configuration }}
        -p:DefineConstants=${{ inputs.cs_symbols }}
        src/${{ matrix.module }}/${{ matrix.module }}.csproj
    -  
      name: Verify Build
      if: ${{ matrix.module == 'KurrentDB' }}
      shell: bash
      run: |
        dotnet run --project src/${{ matrix.module }} --configuration ${{ matrix.configuration }} -- --insecure --what-if
    # so that the oauth tests have an up to date server image to run against
    -  
      name: Build Test Image
      if: ${{ matrix.module == 'KurrentDB' && !startsWith(inputs.os, 'windows') }}
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        target: runtime
        tags: ${{ env.DB_IMAGE }}
    -  
      name: Run Tests
      if: ${{ endsWith(matrix.module, '.Tests') }}
      shell: bash
      run: >
        dotnet test
        --results-directory $(pwd)/test-results
        --no-build
        --configuration ${{ matrix.configuration }}
        --project src/${{ matrix.module }}/${{ matrix.module }}.csproj
#        --test-modules **/bin/**/${{ matrix.module }}.dll
    -  
      name: Publish Test Results (All)
      uses: actions/upload-artifact@v4
      if: ${{ contains(matrix.module, '.Tests') }}
      with:
        name: test-results-${{ inputs.os }}-${{ matrix.module }}
        path: |
          test-results/*.trx
